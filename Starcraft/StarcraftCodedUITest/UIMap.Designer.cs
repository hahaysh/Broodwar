// ------------------------------------------------------------------------------
//  <auto-generated>
//      이 코드는 UI 테스트 빌더를 사용하여 생성되었습니다.
//      버전: 15.0.0.0
//
//      파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//      이러한 변경 내용이 손실됩니다.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace StarcraftCodedUITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("코딩된 UITest 빌더", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1 - 'RecordedMethod1Params'을(를) 사용하여 매개 변수를 이 메서드로 전달합니다.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinComboBox uI열기OComboBox = this.UI실행Window.UIItemWindow.UI열기OComboBox;
            WinEdit uI열기OEdit = this.UI실행Window.UIItemWindow1.UI열기OEdit;
            #endregion

            // 'Windows + d' 바로 가기 키 누르기
            Keyboard.SendKeys(this.RecordedMethod1Params.SendKeys, ModifierKeys.Windows);

            // 'Windows + r' 바로 가기 키 누르기
            Keyboard.SendKeys(this.RecordedMethod1Params.SendKeys1, ModifierKeys.Windows);

            // '열기(O):' 콤보 상자에서 'http://localhost:8126/' 선택
            uI열기OComboBox.EditableItem = this.RecordedMethod1Params.UI열기OComboBoxEditableItem;

            // '열기(O):' 입력란에 '{Enter}' 입력
            Keyboard.SendKeys(uI열기OEdit, this.RecordedMethod1Params.UI열기OEditSendKeys, ModifierKeys.None);

            // Windows 스토어 응용 프로그램을 테스트하려면 Windows 스토어 노드 아래에서 Windows 스토어 응용 프로그램에 대한 코딩된 UI 테스트 프로젝트 템플릿을 사용하십시오.

            // Windows 스토어 응용 프로그램을 테스트하려면 Windows 스토어 노드 아래에서 Windows 스토어 응용 프로그램에 대한 코딩된 UI 테스트 프로젝트 템플릿을 사용하십시오.

            // Windows 스토어 응용 프로그램을 테스트하려면 Windows 스토어 노드 아래에서 Windows 스토어 응용 프로그램에 대한 코딩된 UI 테스트 프로젝트 템플릿을 사용하십시오.

            // Windows 스토어 응용 프로그램을 테스트하려면 Windows 스토어 노드 아래에서 Windows 스토어 응용 프로그램에 대한 코딩된 UI 테스트 프로젝트 템플릿을 사용하십시오.

            // Windows 스토어 응용 프로그램을 테스트하려면 Windows 스토어 노드 아래에서 Windows 스토어 응용 프로그램에 대한 코딩된 UI 테스트 프로젝트 템플릿을 사용하십시오.

            // Windows 스토어 응용 프로그램을 테스트하려면 Windows 스토어 노드 아래에서 Windows 스토어 응용 프로그램에 대한 코딩된 UI 테스트 프로젝트 템플릿을 사용하십시오.
        }
        
        /// <summary>
        /// RecordedMethod2 - 'RecordedMethod2Params'을(를) 사용하여 매개 변수를 이 메서드로 전달합니다.
        /// </summary>
        public void RecordedMethod2()
        {
            #region Variable Declarations
            WinComboBox uI열기OComboBox = this.UI실행Window.UIItemWindow.UI열기OComboBox;
            WinEdit uI열기OEdit = this.UI실행Window.UIItemWindow1.UI열기OEdit;
            #endregion

            // 'Windows + d' 바로 가기 키 누르기
            Keyboard.SendKeys(this.RecordedMethod2Params.SendKeys, ModifierKeys.Windows);

            // 'Windows + r' 바로 가기 키 누르기
            Keyboard.SendKeys(this.RecordedMethod2Params.SendKeys1, ModifierKeys.Windows);

            // '열기(O):' 콤보 상자에서 'http://localhost:47643/' 선택
            uI열기OComboBox.EditableItem = this.RecordedMethod2Params.UI열기OComboBoxEditableItem;

            // '열기(O):' 입력란에 '{Enter}' 입력
            Keyboard.SendKeys(uI열기OEdit, this.RecordedMethod2Params.UI열기OEditSendKeys, ModifierKeys.None);
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public virtual RecordedMethod2Params RecordedMethod2Params
        {
            get
            {
                if ((this.mRecordedMethod2Params == null))
                {
                    this.mRecordedMethod2Params = new RecordedMethod2Params();
                }
                return this.mRecordedMethod2Params;
            }
        }
        
        public UI실행Window UI실행Window
        {
            get
            {
                if ((this.mUI실행Window == null))
                {
                    this.mUI실행Window = new UI실행Window();
                }
                return this.mUI실행Window;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private RecordedMethod2Params mRecordedMethod2Params;
        
        private UI실행Window mUI실행Window;
        #endregion
    }
    
    /// <summary>
    /// 'RecordedMethod1'(으)로 전달할 매개 변수입니다.
    /// </summary>
    [GeneratedCode("코딩된 UITest 빌더", "15.0.26208.0")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// 'Windows + d' 바로 가기 키 누르기
        /// </summary>
        public string SendKeys = "d";
        
        /// <summary>
        /// 'Windows + r' 바로 가기 키 누르기
        /// </summary>
        public string SendKeys1 = "r";
        
        /// <summary>
        /// '열기(O):' 콤보 상자에서 'http://localhost:8126/' 선택
        /// </summary>
        public string UI열기OComboBoxEditableItem = "http://localhost:8126/";
        
        /// <summary>
        /// '열기(O):' 입력란에 '{Enter}' 입력
        /// </summary>
        public string UI열기OEditSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// 'RecordedMethod2'(으)로 전달할 매개 변수입니다.
    /// </summary>
    [GeneratedCode("코딩된 UITest 빌더", "15.0.26208.0")]
    public class RecordedMethod2Params
    {
        
        #region Fields
        /// <summary>
        /// 'Windows + d' 바로 가기 키 누르기
        /// </summary>
        public string SendKeys = "d";
        
        /// <summary>
        /// 'Windows + r' 바로 가기 키 누르기
        /// </summary>
        public string SendKeys1 = "r";
        
        /// <summary>
        /// '열기(O):' 콤보 상자에서 'http://localhost:47643/' 선택
        /// </summary>
        public string UI열기OComboBoxEditableItem = "http://localhost:47643/";
        
        /// <summary>
        /// '열기(O):' 입력란에 '{Enter}' 입력
        /// </summary>
        public string UI열기OEditSendKeys = "{Enter}";
        #endregion
    }
    
    [GeneratedCode("코딩된 UITest 빌더", "15.0.26208.0")]
    public class UI실행Window : WinWindow
    {
        
        public UI실행Window()
        {
            #region 검색 조건
            this.SearchProperties[WinWindow.PropertyNames.Name] = "실행";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("실행");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("코딩된 UITest 빌더", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 검색 조건
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "12298";
            this.WindowTitles.Add("실행");
            #endregion
        }
        
        #region Properties
        public WinComboBox UI열기OComboBox
        {
            get
            {
                if ((this.mUI열기OComboBox == null))
                {
                    this.mUI열기OComboBox = new WinComboBox(this);
                    #region 검색 조건
                    this.mUI열기OComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "열기(O):";
                    this.mUI열기OComboBox.WindowTitles.Add("실행");
                    #endregion
                }
                return this.mUI열기OComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUI열기OComboBox;
        #endregion
    }
    
    [GeneratedCode("코딩된 UITest 빌더", "15.0.26208.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 검색 조건
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.WindowTitles.Add("실행");
            #endregion
        }
        
        #region Properties
        public WinEdit UI열기OEdit
        {
            get
            {
                if ((this.mUI열기OEdit == null))
                {
                    this.mUI열기OEdit = new WinEdit(this);
                    #region 검색 조건
                    this.mUI열기OEdit.SearchProperties[WinEdit.PropertyNames.Name] = "열기(O):";
                    this.mUI열기OEdit.WindowTitles.Add("실행");
                    #endregion
                }
                return this.mUI열기OEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI열기OEdit;
        #endregion
    }
}
